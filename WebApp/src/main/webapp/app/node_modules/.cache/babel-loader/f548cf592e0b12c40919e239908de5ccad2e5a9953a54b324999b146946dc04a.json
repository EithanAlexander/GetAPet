{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EITHA\\\\Desktop\\\\Java workshop\\\\GetAPet\\\\WebApp\\\\src\\\\main\\\\webapp\\\\app\\\\src\\\\MyFavorites.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { BASE_URL, ADS_PER_PAGE } from './config/config';\nimport Ad from './Ad';\nimport usePagination from './hooks/usePagination';\n\n/**\r\n * MyFavorites component for displaying and managing the user's favorite advertisements.\r\n * This component handles fetching, displaying, and deleting favorite ads with pagination support.\r\n * @param {Object} user - The current user object containing user information.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyFavorites({\n  user\n}) {\n  _s();\n  /**\r\n   * Fetches the user's favorite ads from the server with pagination.\r\n   * @param {number} pageNum - The current page number.\r\n   * @param {number} adsPerPage - The number of ads to display per page.\r\n   * @returns {Promise<Object>} - An object containing the ads data and total ads count.\r\n   * @throws {Error} - If the request fails.\r\n   */\n  const fetchFavoritesAds = useCallback(async (pageNum, adsPerPage) => {\n    const response = await fetch(`${BASE_URL}/get_user_favorites_ads?user_id=${encodeURIComponent(user.id)}&pageNum=${pageNum}&adsPerPage=${adsPerPage}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) throw new Error('Failed to fetch favorite ads');\n    const data = await response.json();\n    return {\n      data: data.ads,\n      totalAds: data.totalAds\n    };\n  }, [user.id]);\n  const {\n    data: ads,\n    setData: setAds,\n    loading,\n    error,\n    setError,\n    currentPage,\n    adsPerPage,\n    totalAds,\n    handleNextPage,\n    handlePreviousPage,\n    handleAdsPerPageChange\n  } = usePagination(fetchFavoritesAds);\n\n  /**\r\n   * Handles deleting an ad from the user's favorites on the server.\r\n   * @param {number} user_id - The ID of the user.\r\n   * @param {number} ad_id - The ID of the ad to delete.\r\n   */\n  const handleDelete = async (user_id, ad_id) => {\n    try {\n      const response = await fetch(`${BASE_URL}/delete_ad_from_favorites?user_id=${encodeURIComponent(user_id)}&ad_id=${encodeURIComponent(ad_id)}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        setAds(prevAds => prevAds.filter(ad => ad.ad_id !== ad_id));\n      } else {\n        throw new Error('Failed to delete ad');\n      }\n    } catch (error) {\n      console.error('Error deleting ad:', error);\n      setError('Could not delete the ad, please try again');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading ads...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"adsPerPage\",\n          children: \"Ads per page: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"adsPerPage\",\n          value: adsPerPage,\n          onChange: handleAdsPerPageChange,\n          children: ADS_PER_PAGE.map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: num,\n            children: num\n          }, num, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"My favorite ads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), ads.map((ad, index) => /*#__PURE__*/_jsxDEV(Ad, {\n        ad: ad,\n        handleDelete: adId => handleDelete(user.id, adId),\n        user: user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePreviousPage,\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" Page \", currentPage, \" of \", Math.ceil(totalAds / adsPerPage) || 1, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextPage,\n          disabled: currentPage >= Math.ceil(totalAds / adsPerPage),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(MyFavorites, \"XbStBoV9ggExmxAY6MOFKqOuo58=\", false, function () {\n  return [usePagination];\n});\n_c = MyFavorites;\nexport default MyFavorites;\nvar _c;\n$RefreshReg$(_c, \"MyFavorites\");","map":{"version":3,"names":["React","useCallback","BASE_URL","ADS_PER_PAGE","Ad","usePagination","jsxDEV","_jsxDEV","MyFavorites","user","_s","fetchFavoritesAds","pageNum","adsPerPage","response","fetch","encodeURIComponent","id","method","headers","ok","Error","data","json","ads","totalAds","setData","setAds","loading","error","setError","currentPage","handleNextPage","handlePreviousPage","handleAdsPerPageChange","handleDelete","user_id","ad_id","prevAds","filter","ad","console","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","map","num","index","adId","onClick","disabled","Math","ceil","_c","$RefreshReg$"],"sources":["C:/Users/EITHA/Desktop/Java workshop/GetAPet/WebApp/src/main/webapp/app/src/MyFavorites.js"],"sourcesContent":["import React, { useCallback } from 'react';\r\nimport { BASE_URL, ADS_PER_PAGE } from './config/config';\r\nimport Ad from './Ad';\r\nimport usePagination from './hooks/usePagination';\r\n\r\n/**\r\n * MyFavorites component for displaying and managing the user's favorite advertisements.\r\n * This component handles fetching, displaying, and deleting favorite ads with pagination support.\r\n * @param {Object} user - The current user object containing user information.\r\n */\r\nfunction MyFavorites({ user }) {\r\n  /**\r\n   * Fetches the user's favorite ads from the server with pagination.\r\n   * @param {number} pageNum - The current page number.\r\n   * @param {number} adsPerPage - The number of ads to display per page.\r\n   * @returns {Promise<Object>} - An object containing the ads data and total ads count.\r\n   * @throws {Error} - If the request fails.\r\n   */\r\n  const fetchFavoritesAds = useCallback(async (pageNum, adsPerPage) => {\r\n    const response = await fetch(`${BASE_URL}/get_user_favorites_ads?user_id=${encodeURIComponent(user.id)}&pageNum=${pageNum}&adsPerPage=${adsPerPage}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    if (!response.ok) throw new Error('Failed to fetch favorite ads');\r\n    const data = await response.json();\r\n    return { data: data.ads, totalAds: data.totalAds };\r\n  }, [user.id]);\r\n\r\n  const {\r\n    data: ads,\r\n    setData: setAds,\r\n    loading,\r\n    error,\r\n    setError,\r\n    currentPage,\r\n    adsPerPage,\r\n    totalAds,\r\n    handleNextPage,\r\n    handlePreviousPage,\r\n    handleAdsPerPageChange,\r\n  } = usePagination(fetchFavoritesAds);\r\n\r\n  /**\r\n   * Handles deleting an ad from the user's favorites on the server.\r\n   * @param {number} user_id - The ID of the user.\r\n   * @param {number} ad_id - The ID of the ad to delete.\r\n   */\r\n  const handleDelete = async (user_id, ad_id) => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/delete_ad_from_favorites?user_id=${encodeURIComponent(user_id)}&ad_id=${encodeURIComponent(ad_id)}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        setAds((prevAds) => prevAds.filter((ad) => ad.ad_id !== ad_id));\r\n      } else {\r\n        throw new Error('Failed to delete ad');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting ad:', error);\r\n      setError('Could not delete the ad, please try again');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>My Favorites</h2>\r\n      {loading ? (\r\n        <p>Loading ads...</p>\r\n      ) : error ? (\r\n        <p>Error: {error}</p>\r\n      ) : (\r\n        <div>\r\n          <div>\r\n            <label htmlFor=\"adsPerPage\">Ads per page: </label>\r\n            <select id=\"adsPerPage\" value={adsPerPage} onChange={handleAdsPerPageChange}>\r\n              {ADS_PER_PAGE.map((num) => (\r\n                <option key={num} value={num}>{num}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <p><strong>My favorite ads</strong></p>\r\n          {ads.map((ad, index) => (\r\n            <Ad key={index} ad={ad} handleDelete={(adId) => handleDelete(user.id, adId)} user={user} />\r\n          ))}\r\n          <div>\r\n            <button onClick={handlePreviousPage} disabled={currentPage === 1}>Previous</button>\r\n            <span> Page {currentPage} of {Math.ceil(totalAds / adsPerPage) || 1} </span>\r\n            <button onClick={handleNextPage} disabled={currentPage >= Math.ceil(totalAds / adsPerPage)}>Next</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyFavorites;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}