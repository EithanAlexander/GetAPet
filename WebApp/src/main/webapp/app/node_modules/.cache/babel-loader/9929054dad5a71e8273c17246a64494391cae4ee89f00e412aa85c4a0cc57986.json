{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst usePagination = (fetchData, initialAdsPerPage = 10) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [adsPerPage, setAdsPerPage] = useState(initialAdsPerPage);\n  const [totalAds, setTotalAds] = useState(0);\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      try {\n        const result = await fetchData(currentPage, adsPerPage);\n        setData(result.data);\n        setTotalAds(result.totalAds || 0);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, [currentPage, adsPerPage, fetchData]);\n  const handleNextPage = () => {\n    if (currentPage < Math.ceil(totalAds / adsPerPage)) {\n      setCurrentPage(prevPage => prevPage + 1);\n    }\n  };\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(prevPage => prevPage - 1);\n    }\n  };\n  const handleAdsPerPageChange = event => {\n    setAdsPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1);\n  };\n  return {\n    data,\n    setData,\n    loading,\n    error,\n    setError,\n    currentPage,\n    adsPerPage,\n    totalAds,\n    handleNextPage,\n    handlePreviousPage,\n    handleAdsPerPageChange\n  };\n};\n_s(usePagination, \"6uNHV6WNX98IHQtEbeduIk5wmOw=\");\nexport default usePagination;","map":{"version":3,"names":["useState","useEffect","usePagination","fetchData","initialAdsPerPage","_s","data","setData","loading","setLoading","error","setError","currentPage","setCurrentPage","adsPerPage","setAdsPerPage","totalAds","setTotalAds","loadData","result","message","handleNextPage","Math","ceil","prevPage","handlePreviousPage","handleAdsPerPageChange","event","parseInt","target","value"],"sources":["C:/Users/EITHA/Desktop/Java workshop/GetAPet/WebApp/src/main/webapp/app/src/hooks/usePagination.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst usePagination = (fetchData, initialAdsPerPage = 10) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [adsPerPage, setAdsPerPage] = useState(initialAdsPerPage);\r\n  const [totalAds, setTotalAds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const result = await fetchData(currentPage, adsPerPage);\r\n        setData(result.data);\r\n        setTotalAds(result.totalAds || 0);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, [currentPage, adsPerPage, fetchData]);\r\n\r\n  const handleNextPage = () => {\r\n    if (currentPage < Math.ceil(totalAds / adsPerPage)) {\r\n      setCurrentPage((prevPage) => prevPage + 1);\r\n    }\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage((prevPage) => prevPage - 1);\r\n    }\r\n  };\r\n\r\n  const handleAdsPerPageChange = (event) => {\r\n    setAdsPerPage(parseInt(event.target.value, 10));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  return {\r\n    data,\r\n    setData,\r\n    loading,\r\n    error,\r\n    setError,\r\n    currentPage,\r\n    adsPerPage,\r\n    totalAds,\r\n    handleNextPage,\r\n    handlePreviousPage,\r\n    handleAdsPerPageChange,\r\n  };\r\n};\r\n\r\nexport default usePagination;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,aAAa,GAAGA,CAACC,SAAS,EAAEC,iBAAiB,GAAG,EAAE,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAACI,iBAAiB,CAAC;EAC/D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMiB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3BT,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMU,MAAM,GAAG,MAAMhB,SAAS,CAACS,WAAW,EAAEE,UAAU,CAAC;QACvDP,OAAO,CAACY,MAAM,CAACb,IAAI,CAAC;QACpBW,WAAW,CAACE,MAAM,CAACH,QAAQ,IAAI,CAAC,CAAC;MACnC,CAAC,CAAC,OAAON,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC;MACzB,CAAC,SAAS;QACRX,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDS,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACN,WAAW,EAAEE,UAAU,EAAEX,SAAS,CAAC,CAAC;EAExC,MAAMkB,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIT,WAAW,GAAGU,IAAI,CAACC,IAAI,CAACP,QAAQ,GAAGF,UAAU,CAAC,EAAE;MAClDD,cAAc,CAAEW,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;IAC5C;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIb,WAAW,GAAG,CAAC,EAAE;MACnBC,cAAc,CAAEW,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;IAC5C;EACF,CAAC;EAED,MAAME,sBAAsB,GAAIC,KAAK,IAAK;IACxCZ,aAAa,CAACa,QAAQ,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC;IAC/CjB,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,OAAO;IACLP,IAAI;IACJC,OAAO;IACPC,OAAO;IACPE,KAAK;IACLC,QAAQ;IACRC,WAAW;IACXE,UAAU;IACVE,QAAQ;IACRK,cAAc;IACdI,kBAAkB;IAClBC;EACF,CAAC;AACH,CAAC;AAACrB,EAAA,CAvDIH,aAAa;AAyDnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}